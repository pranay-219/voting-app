/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./models/Admins.ts":
/*!**************************!*\
  !*** ./models/Admins.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Admins = void 0;\nconst sequelize_typescript_1 = __webpack_require__(/*! sequelize-typescript */ \"sequelize-typescript\");\nlet Admins = class Admins extends sequelize_typescript_1.Model {\n};\nexports.Admins = Admins;\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Admins.prototype, \"firstName\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Admins.prototype, \"lastName\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Admins.prototype, \"email\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Admins.prototype, \"password\", void 0);\nexports.Admins = Admins = __decorate([\n    sequelize_typescript_1.Table\n], Admins);\n\n\n//# sourceURL=webpack://voting-app-main/./models/Admins.ts?");

/***/ }),

/***/ "./models/Answers.ts":
/*!***************************!*\
  !*** ./models/Answers.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst sequelize_typescript_1 = __webpack_require__(/*! sequelize-typescript */ \"sequelize-typescript\");\nconst Questions_1 = __importDefault(__webpack_require__(/*! ./Questions */ \"./models/Questions.ts\"));\nlet Answers = class Answers extends sequelize_typescript_1.Model {\n    static getAnswers(questionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findAll({\n                where: {\n                    questionId,\n                },\n            });\n        });\n    }\n    static addAnswer({ title, questionId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.create({\n                title,\n                questionId,\n            });\n        });\n    }\n    static deleteAnswer({ id, questionId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.destroy({\n                where: {\n                    id,\n                    questionId,\n                },\n            });\n        });\n    }\n};\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Answers.prototype, \"title\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.ForeignKey)(() => Questions_1.default),\n    sequelize_typescript_1.Column,\n    __metadata(\"design:type\", Number)\n], Answers.prototype, \"questionId\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.BelongsTo)(() => Questions_1.default),\n    __metadata(\"design:type\", Questions_1.default)\n], Answers.prototype, \"question\", void 0);\nAnswers = __decorate([\n    sequelize_typescript_1.Table\n], Answers);\nexports[\"default\"] = Answers;\n\n\n//# sourceURL=webpack://voting-app-main/./models/Answers.ts?");

/***/ }),

/***/ "./models/Elections.ts":
/*!*****************************!*\
  !*** ./models/Elections.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst sequelize_typescript_1 = __webpack_require__(/*! sequelize-typescript */ \"sequelize-typescript\");\nconst Admins_1 = __webpack_require__(/*! ./Admins */ \"./models/Admins.ts\");\nconst Questions_1 = __importDefault(__webpack_require__(/*! ./Questions */ \"./models/Questions.ts\"));\nconst Voters_1 = __importDefault(__webpack_require__(/*! ./Voters */ \"./models/Voters.ts\"));\nlet Elections = class Elections extends sequelize_typescript_1.Model {\n    static addElection({ title, adminId }) {\n        return this.create({\n            name: title,\n            adminId,\n        });\n    }\n    static getElections(adminId) {\n        return this.findAll({\n            where: {\n                adminId,\n            },\n        });\n    }\n    static deleteElection(id, adminId) {\n        return this.destroy({\n            where: {\n                id: id,\n                adminId,\n            },\n        });\n    }\n    static editElectionName(id, adminId, name) {\n        return this.update({ name: name }, {\n            where: {\n                id,\n                adminId,\n            },\n        });\n    }\n    static startElection(id) {\n        return this.update({ started: true }, {\n            where: {\n                id,\n            },\n        });\n    }\n};\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Elections.prototype, \"name\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.BOOLEAN),\n    __metadata(\"design:type\", Boolean)\n], Elections.prototype, \"started\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.BOOLEAN),\n    __metadata(\"design:type\", Boolean)\n], Elections.prototype, \"status\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.ForeignKey)(() => Admins_1.Admins),\n    sequelize_typescript_1.Column,\n    __metadata(\"design:type\", Number)\n], Elections.prototype, \"adminId\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.BelongsTo)(() => Admins_1.Admins),\n    __metadata(\"design:type\", Admins_1.Admins)\n], Elections.prototype, \"admin\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.HasMany)(() => Questions_1.default),\n    __metadata(\"design:type\", Array)\n], Elections.prototype, \"questions\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.HasMany)(() => Voters_1.default),\n    __metadata(\"design:type\", Array)\n], Elections.prototype, \"voters\", void 0);\nElections = __decorate([\n    sequelize_typescript_1.Table\n], Elections);\nexports[\"default\"] = Elections;\n\n\n//# sourceURL=webpack://voting-app-main/./models/Elections.ts?");

/***/ }),

/***/ "./models/Questions.ts":
/*!*****************************!*\
  !*** ./models/Questions.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst sequelize_typescript_1 = __webpack_require__(/*! sequelize-typescript */ \"sequelize-typescript\");\nconst Elections_1 = __importDefault(__webpack_require__(/*! ./Elections */ \"./models/Elections.ts\"));\nconst Answers_1 = __importDefault(__webpack_require__(/*! ./Answers */ \"./models/Answers.ts\"));\nlet Questions = class Questions extends sequelize_typescript_1.Model {\n    static addQuestion({ title, description, electionId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.create({\n                title,\n                description,\n                electionId,\n            });\n        });\n    }\n    static getQuestions(electionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findAll({\n                where: {\n                    electionId,\n                },\n            });\n        });\n    }\n    static deleteQuestion({ id, electionId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.destroy({\n                where: {\n                    id,\n                    electionId,\n                },\n            });\n        });\n    }\n};\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Questions.prototype, \"title\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Questions.prototype, \"description\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.ForeignKey)(() => Elections_1.default),\n    sequelize_typescript_1.Column,\n    __metadata(\"design:type\", Number)\n], Questions.prototype, \"electionId\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.BelongsTo)(() => Elections_1.default),\n    __metadata(\"design:type\", Elections_1.default)\n], Questions.prototype, \"election\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.HasMany)(() => Answers_1.default),\n    __metadata(\"design:type\", Array)\n], Questions.prototype, \"answers\", void 0);\nQuestions = __decorate([\n    sequelize_typescript_1.Table\n], Questions);\nexports[\"default\"] = Questions;\n\n\n//# sourceURL=webpack://voting-app-main/./models/Questions.ts?");

/***/ }),

/***/ "./models/Voters.ts":
/*!**************************!*\
  !*** ./models/Voters.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst sequelize_typescript_1 = __webpack_require__(/*! sequelize-typescript */ \"sequelize-typescript\");\nconst Elections_1 = __importDefault(__webpack_require__(/*! ./Elections */ \"./models/Elections.ts\"));\nlet Voters = class Voters extends sequelize_typescript_1.Model {\n    static addVoter({ title, password, electionId, }) {\n        return this.create({\n            name: title,\n            password,\n            electionId,\n        });\n    }\n    static getVoters(electionId) {\n        return this.findAll({\n            where: {\n                electionId,\n            },\n        });\n    }\n    static deleteVoter({ id, electionId }) {\n        return this.destroy({\n            where: {\n                id,\n                electionId,\n            },\n        });\n    }\n};\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Voters.prototype, \"name\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.STRING),\n    __metadata(\"design:type\", String)\n], Voters.prototype, \"password\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.Column)(sequelize_typescript_1.DataType.BOOLEAN),\n    __metadata(\"design:type\", Boolean)\n], Voters.prototype, \"status\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.ForeignKey)(() => Elections_1.default),\n    sequelize_typescript_1.Column,\n    __metadata(\"design:type\", Number)\n], Voters.prototype, \"electionId\", void 0);\n__decorate([\n    (0, sequelize_typescript_1.BelongsTo)(() => Elections_1.default),\n    __metadata(\"design:type\", Elections_1.default)\n], Voters.prototype, \"election\", void 0);\nVoters = __decorate([\n    sequelize_typescript_1.Table\n], Voters);\nexports[\"default\"] = Voters;\n\n\n//# sourceURL=webpack://voting-app-main/./models/Voters.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// src/index.js\nconst express_1 = __importDefault(__webpack_require__(/*! express */ \"express\"));\nconst dotenv_1 = __importDefault(__webpack_require__(/*! dotenv */ \"dotenv\"));\nconst csrf = __webpack_require__(/*! tiny-csrf */ \"tiny-csrf\");\nconst body_parser_1 = __importDefault(__webpack_require__(/*! body-parser */ \"body-parser\"));\nconst cookie_parser_1 = __importDefault(__webpack_require__(/*! cookie-parser */ \"cookie-parser\"));\nconst path = __webpack_require__(/*! path */ \"path\");\nconst passport_1 = __importDefault(__webpack_require__(/*! passport */ \"passport\"));\nconst connect_ensure_login_1 = __importDefault(__webpack_require__(/*! connect-ensure-login */ \"connect-ensure-login\"));\nconst express_session_1 = __importDefault(__webpack_require__(/*! express-session */ \"express-session\"));\nconst passport_local_1 = __webpack_require__(/*! passport-local */ \"passport-local\");\nconst bcrypt = __webpack_require__(/*! bcrypt */ \"bcrypt\");\nconst connect_flash_1 = __importDefault(__webpack_require__(/*! connect-flash */ \"connect-flash\"));\ndotenv_1.default.config();\nconst sequelize_typescript_1 = __webpack_require__(/*! sequelize-typescript */ \"sequelize-typescript\");\nconst Admins_1 = __webpack_require__(/*! ../models/Admins */ \"./models/Admins.ts\");\nconst Elections_1 = __importDefault(__webpack_require__(/*! ../models/Elections */ \"./models/Elections.ts\"));\nconst Questions_1 = __importDefault(__webpack_require__(/*! ../models/Questions */ \"./models/Questions.ts\"));\nconst Answers_1 = __importDefault(__webpack_require__(/*! ../models/Answers */ \"./models/Answers.ts\"));\nconst console_1 = __webpack_require__(/*! console */ \"console\");\nconst Voters_1 = __importDefault(__webpack_require__(/*! ../models/Voters */ \"./models/Voters.ts\"));\nconst config = __webpack_require__(/*! .././config/config.json */ \"./config/config.json\");\nconst env = \"development\" || 0;\nconst { database, username, password, host, port, dialect } = config[env];\nconst sequelize = new sequelize_typescript_1.Sequelize(database, username, password, {\n    host,\n    port,\n    dialect,\n});\nsequelize.addModels([Admins_1.Admins, Elections_1.default, Questions_1.default, Answers_1.default, Voters_1.default]);\nconst app = (0, express_1.default)();\n// const port = 3000;\nconst saltRounds = 10;\napp.use(body_parser_1.default.json());\napp.use(express_1.default.urlencoded({ extended: false })); //for encoding urls  form submission for maniputlating election\napp.use((0, cookie_parser_1.default)(\"SSH! THIS IS A SCRET CODE\"));\napp.use(csrf(\"123456789iamasecret987654321look\", [\"POST\", \"PUT\", \"DELETE\"]));\napp.set(\"view engine\", \"ejs\"); //setting up engine to work with ejs\napp.use(express_1.default.static(\"dist\"));\n// app.use(express.static('dist', {\n//   setHeaders: (res: any, path: any) => {\n//     if (path.endsWith('.css')) {\n//       res.setHeader('Content-Type', 'text/css');\n//     }\n//   }\n// }));\napp.use((0, connect_flash_1.default)());\napp.use((0, express_session_1.default)({\n    secret: \"my-super-secret-keyq3243141234\",\n    cookie: {\n        maxAge: 24 * 60 * 60 * 1000, //24hrs\n    },\n}));\napp.use(function (request, response, next) {\n    response.locals.messages = request.flash();\n    next();\n});\napp.use(passport_1.default.initialize());\napp.use(passport_1.default.session());\npassport_1.default.use(new passport_local_1.Strategy({\n    usernameField: \"email\",\n    passwordField: \"password\",\n}, (username, password, done) => {\n    Admins_1.Admins.findOne({ where: { email: username } })\n        .then(function (user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (user) {\n                const result = yield bcrypt.compare(password, user.password);\n                if (result) {\n                    return done(null, user);\n                }\n                else {\n                    return done(null, false, {\n                        //if password is not correct\n                        message: \"Invalid Emailid or password\",\n                    });\n                }\n            }\n            else {\n                return done(null, false, {\n                    //if Admin is not found\n                    message: \"Invalid Emailid or password\",\n                });\n            }\n        });\n    })\n        .catch((error) => {\n        return done(null, false, { message: \"Invalid Emailid or password\" });\n    });\n}));\npassport_1.default.serializeUser((user, done) => {\n    console.log(\"Serializing Admin with id \", user.id);\n    done(null, user.id);\n});\npassport_1.default.deserializeUser((id, done) => {\n    Admins_1.Admins.findByPk(id)\n        .then((user) => {\n        done(null, user);\n    })\n        .catch((error) => {\n        done(error, null);\n    });\n});\n// all the setup is done now we can start with the routes...............................................\n// Login, Signup and Signout .............................................\napp.get(\"/signup\", (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    return response.render(\"signup\", {\n        title: \"signup\",\n        csrfToken: request.csrfToken(),\n    });\n}));\napp.get(\"/login\", (request, response) => {\n    //getting login page to webpage\n    return response.render(\"login\", {\n        //we are rendering login.ejs\n        title: \"LogIn page\",\n        csrfToken: request.csrfToken(),\n    });\n});\n// for signup\napp.post(\"/admins\", function (request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // const Admin = lazyAdminModel();\n        if (request.body.firstName.length == 0) {\n            request.flash(\"error\", \"First name Required\");\n            return response.redirect(\"/signup\");\n        }\n        else if (request.body.email.length == 0) {\n            request.flash(\"error\", \"Email Required\");\n            return response.redirect(\"/signup\");\n        }\n        else if (request.body.password.length == 0) {\n            request.flash(\"error\", \"Password Required\");\n            return response.redirect(\"/signup\");\n        }\n        console.log(\"creating new User\", request.body);\n        const hashedPwd = yield bcrypt.hash(request.body.password, saltRounds);\n        var bl = yield Admins_1.Admins.findOne({\n            where: {\n                email: request.body.email,\n            },\n        });\n        if (bl != null) {\n            request.flash(\"error\", \"Email already Exists\");\n            return response.redirect(\"/signup\");\n        }\n        try {\n            const admin = yield Admins_1.Admins.create({\n                firstName: request.body.firstName,\n                lastName: request.body.lastName,\n                email: request.body.email,\n                password: hashedPwd,\n            });\n            request.login(admin, (err) => {\n                if (err) {\n                    console.log(err);\n                    response.redirect(\"/welcome\");\n                }\n                else {\n                    request.flash(\"success\", \"Successfully Signed up\");\n                    return response.redirect(\"/welcome\");\n                }\n            });\n        }\n        catch (error) {\n            console.log(error);\n            request.flash(\"error\", \"Email already Exists\");\n            return response.redirect(\"/signup\");\n        }\n    });\n});\napp.post(\"/session\", passport_1.default.authenticate(\"local\", {\n    failureRedirect: \"/login\",\n    failureFlash: true,\n}), function (request, response) {\n    console.log(request.user);\n    response.redirect(\"/welcome\");\n});\napp.get(\"/signout\", (request, response, next) => {\n    request.logOut((err) => {\n        if (err)\n            return next(err);\n        response.redirect(\"/\");\n    });\n});\n// welcome routes .............................................\napp.get(\"/\", (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    var bul = false;\n    if (request.user) {\n        bul = true;\n    }\n    return response.render(\"index\", {\n        title: \"online Voting Application\",\n        loginStatus: bul,\n        csrfToken: request.csrfToken(),\n    });\n}));\napp.get(\"/welcome\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b, _c;\n    // const Elections = lazyElectionsModel();\n    // if(!request.user ) return;\n    const loggedInadmin = (_a = request.user) === null || _a === void 0 ? void 0 : _a.id; // Assuming 'id' property exists on 'User' type\n    if (!loggedInadmin)\n        throw new Error(\"Please login to continue\");\n    const allElections = yield Elections_1.default.getElections(parseInt(loggedInadmin));\n    const onGoingElections = yield Elections_1.default.findAll({\n        where: {\n            adminId: loggedInadmin,\n            started: true,\n            status: false,\n        },\n    });\n    const completedElections = yield Elections_1.default.findAll({\n        where: {\n            adminId: loggedInadmin,\n            started: true,\n            status: true,\n        },\n    });\n    const newElections = yield Elections_1.default.findAll({\n        where: {\n            adminId: loggedInadmin,\n            started: false,\n            status: false,\n        },\n    });\n    if (request.accepts(\"html\")) {\n        return response.render(\"welcome\", {\n            title: \"My Elections\",\n            name: (_b = request.user) === null || _b === void 0 ? void 0 : _b.firstName,\n            allElections,\n            completedElections,\n            newElections,\n            onGoingElections,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    else {\n        //for postman like api  we should get json format as it donot support html\n        return response.json({\n            title: \"My Elections\",\n            name: (_c = request.user) === null || _c === void 0 ? void 0 : _c.firstName,\n            allElections,\n            completedElections,\n            newElections,\n            onGoingElections,\n            csrfToken: request.csrfToken(),\n        });\n    }\n}));\n// Elections.............................................\napp.get(\"/elections\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Elections = lazyElectionsModel();\n    if (!request.user)\n        throw new Error(\"User not found\");\n    const loggedInadmin = request.user.id;\n    if (!loggedInadmin)\n        throw new Error(\"Please login to continue\");\n    const allElections = yield Elections_1.default.getElections(parseInt(loggedInadmin));\n    const onGoingElections = yield Elections_1.default.findAll({\n        where: {\n            adminId: loggedInadmin,\n            started: true,\n            status: false,\n        },\n    });\n    const completedElections = yield Elections_1.default.findAll({\n        where: {\n            adminId: loggedInadmin,\n            started: true,\n            status: true,\n        },\n    });\n    const newElections = yield Elections_1.default.findAll({\n        where: {\n            adminId: loggedInadmin,\n            started: false,\n            status: false,\n        },\n    });\n    if (request.accepts(\"html\")) {\n        //request from web i.e. it accepts html   but for postman it accepts json that is in else part\n        return response.render(\"elections\", {\n            //new elections.ejs should be created\n            title: \"my Elections\",\n            email: request.user.email,\n            allElections,\n            completedElections,\n            newElections,\n            onGoingElections,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    else {\n        //for postman like api  we should get json format as it donot support html\n        return response.json({\n            title: \"my Elections\",\n            email: request.user.email,\n            allElections,\n            completedElections,\n            newElections,\n            onGoingElections,\n            csrfToken: request.csrfToken(),\n        });\n    }\n}));\napp.post(\"/elections\", connect_ensure_login_1.default.ensureLoggedIn(), function (request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // const Elections = lazyElectionsModel();\n        if (request.body.title.length == 0) {\n            request.flash(\"error\", \"Enter the title\");\n            return response.redirect(\"/elections\");\n        }\n        console.log(\"creating new election\", request.body);\n        if (!request.user)\n            return;\n        if (!request.user.id)\n            return;\n        try {\n            console.log(\"creating Election: \", request.body);\n            const res = yield Elections_1.default.addElection({\n                title: request.body.title,\n                adminId: parseInt(request.user.id),\n            });\n            console.log(\"Election created: \", res);\n            let createdElectionId = res.dataValues.id;\n            let createdBy = res.dataValues.adminId;\n            const loggedInadmin = request.user.id;\n            (0, console_1.assert)(createdBy === loggedInadmin, \"Admin id mismatch\");\n            return response.redirect(`/elections/${createdElectionId}`);\n        }\n        catch (error) {\n            console.log(error);\n            return response.status(422).json(error);\n        }\n    });\n});\napp.get(\"/elections/:id\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Elections = lazyElectionsModel();\n    try {\n        const election = yield Elections_1.default.findByPk(request.params.id);\n        return response.render(\"election-create\", {\n            electionId: request.params.id,\n            election,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.delete(\"/elections/:id\", connect_ensure_login_1.default.ensureLoggedIn(), function (request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // const Elections = lazyElectionsModel();\n        if (!request.user)\n            throw new Error(\"User not found\");\n        if (!request.user.id)\n            throw new Error(\"Please login to continue\");\n        console.log(\"Delete a election with ID: \", request.params.id);\n        try {\n            var c = yield Elections_1.default.deleteElection(parseInt(request.params.id), parseInt(request.user.id));\n            if (c)\n                console.log(\"deleted successfully\");\n            else\n                console.log(\"unsuccesss\");\n            if (c)\n                return response.json({ success: true });\n            return response.json({ success: false });\n        }\n        catch (error) {\n            return response.status(422).json(error);\n        }\n    });\n});\n//Questions.............................................\napp.get(\"/elections/:id/questions\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Questions = lazyQuestionsModel();\n    var _d;\n    try {\n        var questions = yield Questions_1.default.findAll({\n            where: {\n                electionId: request.params.id,\n            },\n        });\n        // here we need to add options too   but as of now not needed\n        return response.render(\"questions\", {\n            electionId: request.params.id,\n            questions: questions,\n            title: \"Your Questions..!\",\n            email: (_d = request.user) === null || _d === void 0 ? void 0 : _d.email,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.post(\"/elections/:id/questions\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Questions = lazyQuestionsModel();\n    // const Elections = lazyElectionsModel();\n    var _e;\n    if (request.body.title.length == 0) {\n        request.flash(\"error\", \"Enter the title\");\n        return response.redirect(`/elections/${request.params.id}/questions`);\n    }\n    if (request.body.description.length == 0) {\n        request.flash(\"error\", \"You've entered a short description\");\n        return response.redirect(`/elections/${request.params.id}/questions`);\n    }\n    try {\n        yield Questions_1.default.addQuestion({\n            title: request.body.title,\n            description: request.body.description,\n            electionId: parseInt(request.params.id),\n        });\n        const loggedInadmin = (_e = request.user) === null || _e === void 0 ? void 0 : _e.id;\n        const allElections = yield Elections_1.default.findOne({\n            where: {\n                adminId: loggedInadmin,\n            },\n            order: [[\"id\", \"DESC\"]],\n        });\n        console.log(\"......................al id.......\", allElections);\n        return response.redirect(`/elections/${request.params.id}/questions`);\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.get(\"/questionsDetails/:id/:eid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Questions = lazyQuestionsModel();\n    // const Answers = lazyAnswersModel();\n    try {\n        const question = yield Questions_1.default.findByPk(parseInt(request.params.id));\n        const answers = yield Answers_1.default.getAnswers(parseInt(request.params.id));\n        return response.render(\"manageQuestion\", {\n            title: \"Manage Questions\",\n            question,\n            electionId: request.params.eid,\n            questionId: request.params.id,\n            answers,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.get(\"/edit-question/:id/:eid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Questions = lazyQuestionsModel();\n    const questionId = request.params.id;\n    const question = yield Questions_1.default.findOne({\n        where: {\n            id: questionId,\n        },\n    });\n    return response.render(\"edit-question\", {\n        title: \"Edit-Election\",\n        question,\n        questionId,\n        electionId: request.params.eid,\n        csrfToken: request.csrfToken(),\n    });\n}));\napp.post(\"/edit-question/:id/:eid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Questions = lazyQuestionsModel();\n    const title = request.body.title;\n    const desc = request.body.desc;\n    const question = yield Questions_1.default.findOne({\n        where: {\n            id: request.params.id,\n        },\n    });\n    if ((question === null || question === void 0 ? void 0 : question.title) == title && (question === null || question === void 0 ? void 0 : question.description) == desc) {\n        request.flash(\"error\", \"Please update the values..\");\n        return response.redirect(`/edit-question/${request.params.id}/${request.params.eid}`);\n    }\n    const up = yield Questions_1.default.update({\n        title,\n        description: desc,\n    }, {\n        where: {\n            id: question === null || question === void 0 ? void 0 : question.id,\n        },\n    });\n    return response.redirect(`/questionsDetails/${question === null || question === void 0 ? void 0 : question.id}/${request.params.eid}`);\n}));\napp.delete(\"/questions/:id\", connect_ensure_login_1.default.ensureLoggedIn(), function (request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // const Questions = lazyQuestionsModel();\n        console.log(\"We have to delete a Question with ID: \", request.params.id);\n        try {\n            var c = yield Questions_1.default.deleteQuestion({\n                id: parseInt(request.params.id),\n                electionId: request.body.electionId,\n            });\n            if (c)\n                console.log(\"deleted successfully\");\n            else\n                console.log(\"unsuccesss\");\n            return response.json({ success: true });\n        }\n        catch (error) {\n            return response.status(422).json(error);\n        }\n    });\n});\n// Answers.............................................\napp.post(\"/questions/:id/answer/:eid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Answers = lazyAnswersModel();\n    var c = yield Answers_1.default.count({\n        where: {\n            questionId: request.params.id,\n        },\n    });\n    if (c == 4) {\n        request.flash(\"error\", \"Only 4 options are allowed for a question..!\");\n        return response.redirect(`/questionsDetails/${request.params.id}/${request.params.eid}`);\n    }\n    if (request.body.title.length == 0) {\n        request.flash(\"error\", \"Please enter the answer..!\");\n        return response.redirect(`/questionsDetails/${request.params.id}/${request.params.eid}`);\n    }\n    try {\n        yield Answers_1.default.addAnswer({\n            title: request.body.title,\n            questionId: parseInt(request.params.id),\n        });\n        return response.redirect(`/questionsDetails/${request.params.id}/${request.params.eid}`);\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.get(\"/elections/:id/launch\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Elections = lazyElectionsModel();\n    // const Questions = lazyQuestionsModel();\n    // const Answers = lazyAnswersModel();\n    // const Voters = lazyVotersModel();\n    try {\n        const id = request.params.id;\n        const election = yield Elections_1.default.findByPk(id);\n        // here we need to add options too   but as of now not needed\n        const questionsCount = yield Questions_1.default.count({\n            where: {\n                electionId: id,\n            },\n        });\n        const questions = yield Questions_1.default.findAll({\n            where: {\n                electionId: id,\n            },\n        });\n        const answers = yield Answers_1.default.findAll();\n        const votersCount = yield Voters_1.default.count({\n            where: {\n                electionId: id,\n            },\n        });\n        if (questionsCount == 0) {\n            request.flash(\"error\", \"election cannot be launched without minimum number of questions\");\n            return response.redirect(`/elections/${id}`);\n        }\n        else if (votersCount == 0) {\n            request.flash(\"error\", \"election cannot be launched without minimum number of voters\");\n            return response.redirect(`/elections/${id}`);\n        }\n        else {\n            var flag = 0;\n            for (var i = 0; i < questions.length; i++) {\n                const cnt = yield Answers_1.default.count({\n                    where: {\n                        questionId: questions[i].id,\n                    },\n                });\n                if (cnt < 2) {\n                    flag = 1;\n                    request.flash(\"error\", \"election cannot be launched please make sure every question has two or more options\");\n                    return response.redirect(`/elections/${id}`);\n                }\n            }\n            if (flag == 0) {\n                const ress = yield Elections_1.default.startElection(parseInt(id));\n                if (ress) {\n                    request.flash(\"error\", `election launched succesfully at  https://online-voting-app-oyt9.onrender.com/voter-login/${election === null || election === void 0 ? void 0 : election.id}/${election === null || election === void 0 ? void 0 : election.name}`);\n                    return response.redirect(`/elections/${id}`);\n                }\n            }\n            else {\n                request.flash(\"error\", \"launch cannot be done\");\n                return response.redirect(`/elections/${id}`);\n            }\n        }\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.get(\"/edit-answer/:id/:qid/:eid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Answers = lazyAnswersModel();\n    const answerId = request.params.id;\n    const answer = yield Answers_1.default.findOne({\n        where: {\n            id: answerId,\n        },\n    });\n    return response.render(\"edit-answer\", {\n        title: \"Edit-Answer\",\n        answer,\n        answerId: answer === null || answer === void 0 ? void 0 : answer.id,\n        electionId: request.params.eid,\n        questionId: request.params.qid,\n        csrfToken: request.csrfToken(),\n    });\n}));\napp.post(\"/edit-answer/:id/:qid/:eid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Answers = lazyAnswersModel();\n    const title = request.body.title;\n    const answer = yield Answers_1.default.findOne({\n        where: {\n            id: request.params.id,\n        },\n    });\n    if ((answer === null || answer === void 0 ? void 0 : answer.title) == title) {\n        request.flash(\"error\", \"Please update the values..\");\n        return response.redirect(`/edit-answer/${request.params.id}/${request.params.qid}/${request.params.eid}`);\n    }\n    const updateResponse = yield Answers_1.default.update({\n        title,\n    }, {\n        where: {\n            id: answer === null || answer === void 0 ? void 0 : answer.id,\n        },\n    });\n    return response.redirect(`/questionsDetails/${request.params.qid}/${request.params.eid}`);\n}));\napp.delete(\"/answers/:id\", connect_ensure_login_1.default.ensureLoggedIn(), function (request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // const Answers = lazyAnswersModel();\n        console.log(\"We have to delete a answer with ID: \", request.params.id);\n        try {\n            var c = yield Answers_1.default.deleteAnswer({\n                id: parseInt(request.params.id),\n                questionId: request.body.questionId,\n            });\n            if (c)\n                console.log(\"deleted successfully\");\n            else\n                console.log(\"unsuccesss\");\n            return response.json({ success: true });\n        }\n        catch (error) {\n            return response.status(422).json(error);\n        }\n    });\n});\n// Voters.............................................\napp.get(\"/elections/:id/voters\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Voters = lazyVotersModel();\n    var _f;\n    try {\n        var voters = yield Voters_1.default.findAll({\n            where: {\n                electionId: request.params.id,\n            },\n        });\n        // here we need to add options too   but as of now not needed\n        return response.render(\"voters\", {\n            electionId: request.params.id,\n            voters: voters,\n            title: \"Your voters..!\",\n            email: (_f = request.user) === null || _f === void 0 ? void 0 : _f.email,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.post(\"/elections/:id/voters\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Voters = lazyVotersModel();\n    // const Elections = lazyElectionsModel();\n    var _g;\n    if (request.body.name.length == 0) {\n        request.flash(\"error\", \"Enter name!!\");\n        return response.redirect(`/elections/${request.params.id}/voters`);\n    }\n    if (request.body.password.length == 0) {\n        request.flash(\"error\", \"Enter access key!!\");\n        return response.redirect(`/elections/${request.params.id}/voters`);\n    }\n    try {\n        yield Voters_1.default.addVoter({\n            title: request.body.name,\n            password: request.body.password,\n            electionId: parseInt(request.params.id),\n        });\n        console.log(\"dfadfadsfasd.................\", request.body);\n        const loggedInadmin = (_g = request.user) === null || _g === void 0 ? void 0 : _g.id;\n        const allElections = yield Elections_1.default.findOne({\n            where: {\n                adminId: loggedInadmin,\n            },\n            order: [[\"id\", \"DESC\"]],\n        });\n        console.log(\"......................al id.......\", allElections);\n        return response.redirect(`/elections/${request.params.id}/voters`);\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.get(\"/voter-login/:id/:election\", (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Elections = lazyElectionsModel();\n    const id = request.params.id;\n    const election = yield Elections_1.default.findByPk(id);\n    return response.render(\"voter-login\", {\n        title: \"Voter LogIn\",\n        election,\n        csrfToken: request.csrfToken(),\n    });\n}));\napp.post(\"/voter-login/:id/:election\", (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Voters = lazyVotersModel();\n    const name = request.body.id;\n    const password = request.body.password;\n    const voter = yield Voters_1.default.findOne({\n        where: {\n            name,\n            password,\n            electionId: request.params.id,\n        },\n    });\n    if (!voter) {\n        request.flash(\"error\", \"Invalid details..\");\n        return response.redirect(`/voter-login/${request.params.id}/${request.params.election}`);\n    }\n    console.log(\"Current voter Status\", voter.status);\n    if (voter.status === true) {\n        request.flash(\"error\", \"your response was already submitted..\");\n        return response.redirect(`/voter-login/${request.params.id}/${request.params.election}`);\n    }\n    return response.redirect(`/conduct-election/${request.params.id}/${request.params.election}/${voter.id}`);\n}));\napp.get(\"/conduct-election/:id/:election/:vid\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Elections = lazyElectionsModel();\n    // const Questions = lazyQuestionsModel();\n    // const Answers = lazyAnswersModel();\n    // const Voters = lazyVotersModel();\n    const id = request.params.id;\n    try {\n        const questions = yield Questions_1.default.findAll({\n            where: {\n                electionId: id,\n            },\n        });\n        const voter = yield Voters_1.default.findOne({\n            where: {\n                id: request.params.vid,\n                electionId: request.params.id,\n            },\n        });\n        const election = yield Elections_1.default.findByPk(id);\n        const answers = yield Answers_1.default.findAll();\n        if (parseInt(request.params.vid) == 0) {\n            return response.render(\"ViewElection\", {\n                title: election === null || election === void 0 ? void 0 : election.name,\n                electionId: id,\n                election,\n                voterId: request.params.vid,\n                answers,\n                questions,\n                csrfToken: request.csrfToken(),\n            });\n        }\n        else if ((voter === null || voter === void 0 ? void 0 : voter.status) == true) {\n            request.flash(\"error\", \"your response was already submitted..\");\n            return response.redirect(`/voter-login/${request.params.id}/${request.params.election}`);\n        }\n        return response.render(\"launch\", {\n            title: election === null || election === void 0 ? void 0 : election.name,\n            electionId: id,\n            election,\n            voterId: request.params.vid,\n            answers,\n            questions,\n            csrfToken: request.csrfToken(),\n        });\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.get(\"/elections/:id/preview\", connect_ensure_login_1.default.ensureLoggedIn(), (request, response) => __awaiter(void 0, void 0, void 0, function* () {\n    // const Elections = lazyElectionsModel();\n    // const Questions = lazyQuestionsModel();\n    // const Answers = lazyAnswersModel();\n    try {\n        const id = request.params.id;\n        const election = yield Elections_1.default.findOne({\n            where: {\n                id,\n            },\n        });\n        const questions = yield Questions_1.default.findAll({\n            where: {\n                electionId: id,\n            },\n        });\n        const answers = yield Answers_1.default.findAll();\n        return response.render(\"ViewElection\", {\n            election,\n            questions,\n            answers,\n            title: \"Preview Election\",\n            csrfToken: request.csrfToken(),\n        });\n    }\n    catch (error) {\n        console.log(error);\n        return response.status(422).json(error);\n    }\n}));\napp.delete(\"/voters/:id\", connect_ensure_login_1.default.ensureLoggedIn(), function (request, response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // const Voters = lazyVotersModel();\n        console.log(\"We have to delete a voter with ID: \", request.params.id);\n        try {\n            //this electionid comes from del func in script of voters.ejs\n            var c = yield Voters_1.default.deleteVoter({\n                id: parseInt(request.params.id),\n                electionId: request.body.electionId,\n            });\n            if (c)\n                console.log(\"deleted successfully\");\n            else\n                console.log(\"unsuccesss\");\n            return response.json({ success: true });\n        }\n        catch (error) {\n            return response.status(422).json(error);\n        }\n    });\n});\napp.listen(3000, () => {\n    console.log(`[server]: Server is running at http://localhost:${3000}`);\n});\n\n\n//# sourceURL=webpack://voting-app-main/./src/index.ts?");

/***/ }),

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),

/***/ "body-parser":
/*!******************************!*\
  !*** external "body-parser" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("body-parser");

/***/ }),

/***/ "connect-ensure-login":
/*!***************************************!*\
  !*** external "connect-ensure-login" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("connect-ensure-login");

/***/ }),

/***/ "connect-flash":
/*!********************************!*\
  !*** external "connect-flash" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("connect-flash");

/***/ }),

/***/ "cookie-parser":
/*!********************************!*\
  !*** external "cookie-parser" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("cookie-parser");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("express");

/***/ }),

/***/ "express-session":
/*!**********************************!*\
  !*** external "express-session" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("express-session");

/***/ }),

/***/ "passport":
/*!***************************!*\
  !*** external "passport" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("passport");

/***/ }),

/***/ "passport-local":
/*!*********************************!*\
  !*** external "passport-local" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("passport-local");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "sequelize-typescript":
/*!***************************************!*\
  !*** external "sequelize-typescript" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("sequelize-typescript");

/***/ }),

/***/ "tiny-csrf":
/*!****************************!*\
  !*** external "tiny-csrf" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("tiny-csrf");

/***/ }),

/***/ "console":
/*!**************************!*\
  !*** external "console" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("console");

/***/ }),

/***/ "./config/config.json":
/*!****************************!*\
  !*** ./config/config.json ***!
  \****************************/
/***/ ((module) => {

eval("module.exports = /*#__PURE__*/JSON.parse('{\"development\":{\"username\":\"postgres\",\"password\":\"postgres\",\"database\":\"vote-db\",\"host\":\"127.0.0.1\",\"dialect\":\"postgres\"},\"test\":{\"username\":\"postgres\",\"password\":\"postgres\",\"database\":\"vote-test-db\",\"host\":\"127.0.0.1\",\"dialect\":\"postgres\"},\"production\":{\"use_env_variable\":\"DATABASE_URL\",\"dialect\":\"postgres\"}}');\n\n//# sourceURL=webpack://voting-app-main/./config/config.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;